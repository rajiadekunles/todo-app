Todo~app


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>To-Do App</title>
  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <div class="container">
    <h1>To-Do List</h1>
    <form id="todo-form">
      <input type="text" id="todo-input" placeholder="Enter a task" required />
      <button type="submit">Add Task</button>
    </form>
    <ul id="todo-list"></ul>
  </div>
  <script src="app.js"></script>
</body>
</html>


body {
  font-family: Arial, sans-serif;
  background-color: #f0f4f8;
  display: flex;
  justify-content: center;
  padding-top: 50px;
}


.container {
  background: white;
  padding: 2rem;
  border-radius: 12px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  width: 100%;
  max-width: 400px;
}


h1 {
  text-align: center;
  color: #333;
}


form {
  display: flex;
  margin-bottom: 1rem;
}


input {
  flex: 1;
  padding: 0.5rem;
  border: 1px solid #ccc;
  border-radius: 6px 0 0 6px;
}


button {
  padding: 0.5rem 1rem;
  border: none;
  background-color: #007bff;
  color: white;
  border-radius: 0 6px 6px 0;
  cursor: pointer;
}


button:hover {
  background-color: #0056b3;
}


ul {
  list-style: none;
  padding: 0;
}


li {
  display: flex;
  justify-content: space-between;
  padding: 0.5rem;
  border-bottom: 1px solid #ddd;
}


li.completed span {
  text-decoration: line-through;
  color: gray;
}


li button {
  background: red;
  border: none;
  color: white;
  padding: 0.3rem 0.6rem;
  border-radius: 4px;
  cursor: pointer;
}


li button:hover {
  background: darkred;
}


const form = document.getElementById('todo-form');
const input = document.getElementById('todo-input');
const list = document.getElementById('todo-list');


let tasks = JSON.parse(localStorage.getItem('tasks')) || [];


function saveTasks() {
  localStorage.setItem('tasks', JSON.stringify(tasks));
}


function renderTasks() {
  list.innerHTML = '';
  tasks.forEach((task, index) => {
    const li = document.createElement('li');
    li.className = task.completed ? 'completed' : '';


    const span = document.createElement('span');
    span.textContent = task.text;
    span.style.cursor = 'pointer';
    span.addEventListener('click', () => {
      tasks[index].completed = !tasks[index].completed;
      saveTasks();
      renderTasks();
    });


    const delBtn = document.createElement('button');
    delBtn.textContent = 'Delete';
    delBtn.addEventListener('click', () => {
      tasks.splice(index, 1);
      saveTasks();
      renderTasks();
    });


    li.appendChild(span);
    li.appendChild(delBtn);
    list.appendChild(li);
  });
}


form.addEventListener('submit', (e) => {
  e.preventDefault();
  const newTask = {
    text: input.value.trim(),
    completed: false,
  };
  tasks.push(newTask);
  saveTasks();
  input.value = '';
  renderTasks();
});


renderTasks();